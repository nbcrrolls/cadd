<?xml version="1.0" standalone="no" ?>

<kickstart>

	<description>
	CADD Configuration
	</description>

	<copyright>
	</copyright>

	<changelog>
	</changelog>

<post>

#Make log file directory 
mkdir -p /opt/cadd/logs
chown tomcat /opt/cadd/logs


# Opal deployment stuff
if [ -d /opt/opal ]; then
    #ok we have opal installed
    #let's deploy the 


#TODO serivce name on the workflow is /GROMOS_ClusterFiles no gromos_cluster_4.5.5
<file name="/opt/opal/deployed/deploy.sh" mode="append">
# gromos clustering
gromosVER=4.5.5
gromos_script=/opt/cadd/bin/gromos_cluster_files.sh
if test -e $gromos_script; then
    $ANT -f $OPALXML deploy -DserviceName=gromos_cluster_$gromosVER -DappConfig=$OPALCONFIG/gromos_cluster_$gromosVER.xml
fi

# autodock vina screening
vinaVER=1.1.2
vina_screening_script=/opt/cadd/bin/vina_screening.sh
if test -e $vina_screening_script; then
    $ANT -f $OPALXML deploy -DserviceName=autodockvina_screening_$vinaVER -DappConfig=$OPALCONFIG/vina_screening_$vinaVER.xml
fi

# prepare receptor
prepare_receptorVER=1.5.6
prepare_receptor_script=/opt/cadd/bin/prepare_receptor.sh
if test -e $prepare_receptor_script; then
    $ANT -f $OPALXML deploy -DserviceName=prepare_receptor_$prepare_receptorVER -DappConfig=$OPALCONFIG/prepare_receptor_$prepare_receptorVER.xml
fi

# trajqr clustering
trajqr_script=/opt/cadd/bin/trajQR.py
trajqrver=1.0
if test -e $trajqr_script ; then
    $ANT -f $OPALXML deploy -DserviceName=trajqr_$trajqrver -DappConfig=$OPALCONFIG/trajqr_$trajqrver.xml
fi

</file>

    export JAVA_HOME=/usr/java/latest
    export PATH=$JAVA_HOME/bin:$PATH
    export CATALINA_HOME=/opt/tomcat
    #takes a little longer in this way but less code to write
    /bin/su tomcat -c "/opt/opal/deployed/deploy.sh"
fi


</post>

</kickstart>

